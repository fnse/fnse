@import "base.scss";

/*----------------------- Navigation Styles ------------------------------ */

/// Credit: https://hackernoon.com/the-ultimate-css-battle-grid-vs-flexbox-d40da0449faf

$magicLogoMarginTop: 8px;

header {
    @include flex();
    max-width: $maxWidth;
    margin: 0 auto;
    @include heavyFontStack();
    padding: 0px 10px 0px 10px;

}

h1 {
    color: $white;
    margin: $magicLogoMarginTop 0px 0px 0px;
    padding: 0px;
}

.header {
    width: 100%;
    background-color: $darkGrey;
}

.heroImg {
  	background-image: url("/images/Header BG Mobile.png");
	background-repeat: no-repeat;
	background-position: center top;
	background-size: 600px;
	background-color: $paleYellow;
	height: 100px;
}

/// Display a background image for larger screens
@media screen and (min-width: 35em) {

	.heroImg {
		background-image: url("/images/Header BG.png");
    	background-size: 1200px;
    	height: 200px;
	}

}


/*----------------------- Donate Button ------------------------------ */

.donate {
	background-color: $lightYellow;
	text-align: center;
	vertical-align: middle;
	height: 27px;
	width: 75px;
	margin: $magicLogoMarginTop 5px 0px 5px;
	padding: 8px 0px 0px 0px;
	text-decoration: none;
	color: $darkGrey;
	@include transition(all 0.3s ease-out);
}

.donate:hover {
	background-color: $green;
	color: $white;
}


/*----------------------- Hamburger Functionality ------------------------------ */

/// Credit: https://codepen.io/bradfrost/pen/sHvaz

$mobileNavMenuVerticalOffset: 30px;
$mobileNavMenuHorizontalOffset: -10px;

div.menu-link {
    padding: 1em;
    color: $white;
}

// Default plans for small screen. Nav is hidden, and will animate when height changes.
nav[role=navigation] {
    @extend %clearfix;
    overflow: hidden;
    max-height: 0;
    @include transition(all 0.3s ease-out);
    width: 100%;
    margin: 0px 0px 0px $mobileNavMenuHorizontalOffset;
}

// When we want nav to appear, change the height
nav[role=navigation].open {
    max-height: 15em;
    margin-bottom: 10px;
    margin-top: $mobileNavMenuVerticalOffset;
}

nav[role=navigation] ul {
    text-align: center;
    padding: 0;
    width: 100%;
}

nav[role=navigation] li {
    display: inline-block;
    margin: 0 0.25em;
}

nav[role=navigation] li a {
    display: inline-block;
    padding: 0.8em;
    color: $white;
    text-transform: uppercase;
    text-decoration: none;
    text-align: center;
}

// Style for larger screens. Hide the menu button, and show the normal navigation menu.
@media screen and (min-width: 35em) {
    div.menu-link {
        display: none;
    }

    nav[role=navigation] {
        max-height: none;
        margin: 0px;
    }

    nav[role=navigation] ul {
        margin: 5px 0 0 -0.25em;
        border: 0;
        text-align: right;
    }

    nav[role=navigation] li a {
        border: 0;
    }
}

/*----------------- Hamburger Animation -----------------*/

/// Credit: https://codepen.io/mblode/pen/evjfn


@mixin btn($left, $top) {
    width: 30px;
    top: $top;
    left: $left;
    transition-duration: 0.5s;
}

@mixin icon($height, $width) {
    transition-duration: 0.5s;
    position: absolute;
    height: $height;
    width: $width;
    top: 122px;
    background-color: $white;
}

@mixin icon-before($height, $width, $top) {
    transition-duration: 0.5s;
    position: absolute;
    width: $width;
    height: $height;
    background-color: $white;
    content: "";
    top: $top;
}

@mixin icon-after($height, $width, $top) {
    transition-duration: 0.5s;
    position: absolute;
    width: $width;
    height: $height;
    background-color: $white;
    content: "";
    top: $top;
}

div.menu-link {
    @include btn(120px, 100px);

    .icon {
        @include icon(4px, 30px);

        &:before {
            @include icon-before(4px, 30px, -10px);
        }

        &:after {
            @include icon-after(4px, 30px, 10px);
        }
    }

    &.open {
        .icon {
            transition-duration: 0.5s;
            background: transparent;

            &:before {
                transform: rotateZ(45deg) scaleX(1.25) translate(6.5px, 6.5px);
            }

            &:after {
                transform: rotateZ(-45deg) scaleX(1.25) translate(6px, -6px);
            }
        }
    }

    &:hover {
        cursor: pointer;
    }
}